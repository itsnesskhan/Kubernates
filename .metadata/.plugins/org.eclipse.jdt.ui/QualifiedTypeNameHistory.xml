<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="com.order.feinClient.ItemClient"/>
    <fullyQualifiedTypeName name="java.util.LinkedHashMap"/>
    <fullyQualifiedTypeName name="java.lang.Object"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.extension.ExtendWith"/>
    <fullyQualifiedTypeName name="org.mockito.junit.jupiter.MockitoExtension"/>
    <fullyQualifiedTypeName name="com.item.service.impl.ItemServiceImpl"/>
    <fullyQualifiedTypeName name="org.mockito.InjectMocks"/>
    <fullyQualifiedTypeName name="com.item.repository.ItemRepository"/>
    <fullyQualifiedTypeName name="lombok.Builder"/>
    <fullyQualifiedTypeName name="org.modelmapper.ModelMapper"/>
    <fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="com.order.service.OrderService"/>
    <fullyQualifiedTypeName name="org.springframework.test.web.servlet.MockMvcBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.test.web.servlet.setup.MockMvcBuilders"/>
    <fullyQualifiedTypeName name="com.order.controller.OrderController"/>
    <fullyQualifiedTypeName name="java.lang.Class"/>
    <fullyQualifiedTypeName name="com.order.payloads.ItemDto"/>
    <fullyQualifiedTypeName name="com.order.model.Order"/>
    <fullyQualifiedTypeName name="com.order.payloads.CommonApiResponse"/>
    <fullyQualifiedTypeName name="org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.test.web.servlet.request.MockMvcRequestBuilders"/>
    <fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
    <fullyQualifiedTypeName name="ch.qos.logback.core.boolex.Matcher"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.datatype.jsr310.JavaTimeModule"/>
    <fullyQualifiedTypeName name="org.mockito.Mock"/>
    <fullyQualifiedTypeName name="com.order.payloads.OrderDto"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.hamcrest.Matchers"/>
    <fullyQualifiedTypeName name="org.springframework.test.web.servlet.result.MockMvcResultHandlers"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest"/>
    <fullyQualifiedTypeName name="com.item.contorller.ItemControllerTest"/>
    <fullyQualifiedTypeName name="com.item.contorller.ItemController"/>
    <fullyQualifiedTypeName name="javax.management.loading.PrivateMLet"/>
    <fullyQualifiedTypeName name="org.springframework.test.web.servlet.MockMvc"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="java.security.KeyStore.PrivateKeyEntry"/>
    <fullyQualifiedTypeName name="com.item.service.ItemService"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.mock.mockito.MockBean"/>
    <fullyQualifiedTypeName name="com.item.model.Item"/>
    <fullyQualifiedTypeName name="com.item.payloads.CommonApiResponse"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.ObjectMapper"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="org.springframework.test.web.servlet.result.MockMvcResultMatchers"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="com.item.payloads.ItemDto"/>
    <fullyQualifiedTypeName name="com.mysql.cj.protocol.x.Ok"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.context.config.annotation.RefreshScope"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
</qualifiedTypeNameHistroy>
